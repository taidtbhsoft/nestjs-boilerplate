services:
  app:
    env_file:
      - .env
    container_name: nest_boilerplate
    dockerfile: Dockerfile
    ports:
      - "$PORT:$PORT"
    depends_on:
      - postgres
    networks:
      - app-network
    volumes:
      - type: bind
        source: .
        target: /usr/src/app
  postgres:
    image: postgres
    container_name: nest_postgres
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: 'GMT'
      PGTZ: 'GMT'
    ports:
      - "5432:5432"
    volumes:
      - postgres:/data/postgres
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    env_file:
      - .env
    networks:
      - app-network
  redis:
      image: redis
      container_name: nest_redis
      ports:
        - '6379:6379'
      command: redis-server
      networks:
      - app-network
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    networks:
      - app-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:7.3.2
    ports:
      - "9092:9092"
    networks:
      - app-network
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
   kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - app-network
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
networks:
  app-network:
    driver: bridge
volumes:
  postgres:
    driver: local

